server:
  port: 5003
  tomcat:
    max-http-form-post-size: 10485760
    max-swallow-size: -1

spring:
  datasource:
    url: jdbc:postgresql://dbivr:5432/postgres
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: smtp.mail.ru
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true
  autoconfigure:
    exclude: io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    path: /swagger-ui.html
    configUrl: /backend/v3/api-docs/swagger-config
    urls:
      - name: Default API
        url: /backend/v3/api-docs
  api-docs:
    path: /v3/api-docs

openapi-requests:
  url: https://ivr.ds-hub.ru/backend

yandex:
  cloud:
    access: ${S3_ACCESS}
    secret: ${S3_SECRET}
    bucket: ${S3_BUCKET_NAME}

telegram:
  bot:
    help_password: ${TG_BOT_HELP_PASS}
    search_password: ${TG_BOT_SEARCH_PASS}
    username: ${TG_BOT_NAME}
    token: ${TG_BOT_TOKEN}

auth:
  reset-password:
    link: http://localhost:5003/users/update-password?userId=
  confirm-email:
    link: http://localhost:5003/users/confirm-email?userId=
  key: ${AUTH_KEY}
  refresh-key: ${AUTH_REFRESH_KEY}
  password-encrypt-key: ${AUTH_PASSWORD_ENCRYPT_KEY}

flask-api:
  vector: http://ivrgoodvector:5004
  tts: http://ivrgoodtts:5005